{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A CloudFormation template to host a static website, must be set up in US East (N. Virginia) region.",
  "Parameters": {
    "HostedZone": {
      "Type": "String",
      "Description": "The DNS name of an existing Amazon Route 53 hosted zone",
      "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
      "ConstraintDescription": "must be a valid DNS zone name."
    },
    "AcmArn": {
      "Type": "String",
      "Description": "The ARN of the SSL certificate stored on ACM",
      "AllowedPattern": "arn:aws:acm:.*",
      "ConstraintDescription": "Must be the ARN of an ACM certificate in the US East (N. Virginia) region."
    }
  },
  "Mappings": {
    "RegionS3WebsiteSuffix": {
      "us-east-1": {"Suffix": ".s3-website-us-east-1.amazonaws.com"},
      "us-west-1": {"Suffix": ".s3-website-us-west-1.amazonaws.com"},
      "us-west-2": {"Suffix": ".s3-website-us-west-2.amazonaws.com"},
      "eu-west-1": {"Suffix": ".s3-website-eu-west-1.amazonaws.com"},
      "ap-northeast-1": {"Suffix": ".s3-website-ap-northeast-1.amazonaws.com"},
      "ap-northeast-2": {"Suffix": ".s3-website-ap-northeast-2.amazonaws.com"},
      "ap-southeast-1": {"Suffix": ".s3-website-ap-southeast-1.amazonaws.com"},
      "ap-southeast-2": {"Suffix": ".s3-website-ap-southeast-2.amazonaws.com"},
      "ap-south-1": {"Suffix": ".s3-website-ap-south-1.amazonaws.com"},
      "sa-east-1": {"Suffix": ".s3-website-sa-east-1.amazonaws.com"},
      "cn-north-1": {"Suffix": ".s3-website.cn-north-1.amazonaws.com.cn"},
      "eu-central-1": {"Suffix": ".s3-website-eu-central-1.amazonaws.com"}
    },
    "RegionMap" : {
     "us-east-1" : { "S3hostedzoneID" : "Z3AQBSTGFYJSTF", "websiteendpoint" : "s3-website-us-east-1.amazonaws.com" },
     "us-west-1" : { "S3hostedzoneID" : "Z2F56UZL2M1ACD", "websiteendpoint" : "s3-website-us-west-1.amazonaws.com" },
     "us-west-2" : { "S3hostedzoneID" : "Z3BJ6K6RIION7M", "websiteendpoint" : "s3-website-us-west-2.amazonaws.com" },            
     "eu-west-1" : { "S3hostedzoneID" : "Z1BKCTXD74EZPE", "websiteendpoint" : "s3-website-eu-west-1.amazonaws.com" },
     "ap-southeast-1" : { "S3hostedzoneID" : "Z3O0J2DXBE1FTB", "websiteendpoint" : "s3-website-ap-southeast-1.amazonaws.com" },
     "ap-southeast-2" : { "S3hostedzoneID" : "Z1WCIGYICN2BYD", "websiteendpoint" : "s3-website-ap-southeast-2.amazonaws.com" },
     "ap-northeast-1" : { "S3hostedzoneID" : "Z2M4EHUR26P7ZW", "websiteendpoint" : "s3-website-ap-northeast-1.amazonaws.com" },
     "sa-east-1" : { "S3hostedzoneID" : "Z31GFT0UA1I2HV", "websiteendpoint" : "s3-website-sa-east-1.amazonaws.com" }
   }
  },
  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "BucketOwnerFullControl",
        "WebsiteConfiguration": {
          "RedirectAllRequestsTo": {
            "HostName": {
              "Fn::Join": ["", ["www", ".", {"Ref": "HostedZone"} ] ] 
            }
          }
        }
      }
    },
    "S3BucketWWW": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "error.html"
        }
      }
    },
    "CloudFront": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Comment": "Cloudfront to handle root domain HTTPS requests",
          "Aliases": [ {"Ref": "HostedZone"} ],
          "Enabled": "true",
          "ViewerCertificate": {
            "AcmCertificateArn": {"Ref" : "AcmArn"},
            "SslSupportMethod" : "sni-only"
          },
          "PriceClass" : "PriceClass_All",
          "DefaultCacheBehavior": {
            "ForwardedValues": {"QueryString": "true"},
            "TargetOriginId": "only-origin",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "Origins": [
            {
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "HTTPSPort": "443",
                "OriginProtocolPolicy": "match-viewer"
              },
              "DomainName": {
                "Fn::Join": ["", [{"Ref": "S3Bucket"}, {"Fn::FindInMap": ["RegionS3WebsiteSuffix", {"Ref": "AWS::Region"}, "Suffix"] } ] ]
              },
              "Id": "only-origin"
            }
          ]
        }
      }
    },
    "CloudFrontWWW": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Comment": "CDN for S3-backed website",
          "Aliases": [{"Fn::Join": ["", ["www", ".", {"Ref": "HostedZone"} ] ] } ],
          "Enabled": "true",
          "ViewerCertificate": {
            "AcmCertificateArn": {"Ref" : "AcmArn"},
            "SslSupportMethod" : "sni-only"
          },
          "PriceClass" : "PriceClass_All",
          "DefaultCacheBehavior": {
            "ForwardedValues": {"QueryString": "true"},
            "TargetOriginId": "only-origin",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "HTTPSPort": "443",
                "OriginProtocolPolicy": "match-viewer"
              },
              "DomainName": {
                "Fn::Join": ["", [{"Ref": "S3BucketWWW"}, {"Fn::FindInMap": ["RegionS3WebsiteSuffix", {"Ref": "AWS::Region"}, "Suffix"] } ] ]
              },
              "Id": "only-origin"
            }
          ]
        }
      }
    },
    "Route53RootDomainAliasRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": ["", [{"Ref": "HostedZone"}, "."] ]
        },
        "Comment": "ALIAS record pointing to CloudFront distribution",
        "Name": {"Ref": "HostedZone"},
        "Type": "A",
        "AliasTarget": {
          "HostedZoneId": "Z2FDTNDATAQYW2",
          "DNSName": {"Fn::GetAtt": ["CloudFront", "DomainName"] }
        }
      }
    },
    "Route53SubdomainCnameRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": ["", [{"Ref": "HostedZone"}, "."] ]
        },
        "Comment": "CNAME record pointing to CloudFront distribution",
        "Name": {
          "Fn::Join": ["", ["www", ".", {"Ref": "HostedZone"} ] ] 
        },
        "Type": "CNAME",
        "TTL": "900",
        "ResourceRecords": [{"Fn::GetAtt": ["CloudFrontWWW", "DomainName"] } ]
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Value": {
        "Fn::Join": ["", ["https://www.", {"Ref": "HostedZone"} ] ] 
      },
      "Description": "The URL of the newly created website"
    },
    "BucketName": {
      "Value": {
        "Ref": "S3Bucket"
      },
      "Description": "Name of S3 bucket to hold website content"
    }
  }
}